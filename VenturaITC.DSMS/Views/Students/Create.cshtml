@model VenturaITC.DSMS.ViewModels.StudentEnrolmentViewModel

@{
    ViewBag.Title = "Create";
}

@section scripts{
    <script>

        //On document.ready
        $(function () {

            //Handles the student_type_id DropDownList change event.
            $('#student_type_id').change(function () {

                var typeID = $('#student_type_id').val();

                switch (typeID) {
                    //Complete bursary:
                    case "2":
                        $('#payment_type_id').prop('disabled', true);
                        $('#amountToPay').prop('disabled', true);
                        $('#payment_id').prop('disabled', true);

                        $('#payment_type_id').val("1");
                        $('#minimumAmount').val("0");
                        $('#amountToPay').val("0");
                        $('#payment_id').val("0");
                        break;

                        //Partial bursary:
                    case "3":
                        if ($('#license_id').val() != '') {
                            $('#payment_type_id').prop('disabled', false);
                        } else {
                            $('#payment_type_id').prop('disabled', true);
                        }

                        $('#minimumAmount').prop('disabled', true);
                        $('#amountToPay').prop('disabled', false);
                        $('#payment_id').prop('disabled', false);

                        $('#payment_type_id').val('');
                        $('#minimumAmount').val("0");
                        $('#amountToPay').val('');
                        $('#payment_id').val('');

                        break;

                        //Normal
                    default:
                        if ($('#license_id').val() != '') {
                            $('#payment_type_id').prop('disabled', false);
                        } else {
                            $('#payment_type_id').prop('disabled', true);
                        }

                        $('#minimumAmount').prop('disabled', true);
                        $('#amountToPay').prop('disabled', false);
                        $('#payment_id').prop('disabled', false);

                        $('#payment_type_id').val('');
                        $('#minimumAmount').val('');
                        $('#amountToPay').val('');
                        $('#payment_id').val('');
                        break;
                }
            });

            //Handles the license_id DropDownList change event.
            $('#license_id').change(function () {

                var categoryID = $('#license_id').val();

                if (categoryID != '') {
                    $.getJSON("/PaymentUtils/GetCategoryCost", { categoryID: categoryID }, function (data) {

                        if ($('#student_type_id').val() != "2") {
                            $('#payment_type_id').prop('disabled', false);
                        }

                        $('#totalAmount').val(data.categoryCost);
                    })
                        .fail(function (data) {
                            alert("An error ocurred: " + data.responseText);
                        });
                } else {
                    $('#payment_type_id').prop('disabled', true);
                    $('#totalAmount').val('');
                }
            });

            //Handles the license_id DropDownList change event.
            $('#payment_type_id').change(function () {

                var typeID = $('#payment_type_id').val();

                if (typeID != '') {
                    $.getJSON("/PaymentUtils/GetEnrollmentPaymentAmounts", { categoryID: $('#license_id').val(), paymentTypeID: typeID }, function (data) {
                        $('#minimumAmount').val(data.minimumAmount);
                        $('#amountToPay').val(data.amountToPay);
                    })
                        .fail(function (data) {
                            alert("An error ocurred: " + data.responseText);
                        });
                } else {
                    $('#minimumAmount').val('');
                    $('#amountToPay').val('');
                }
            });

        });

    </script>

}

<h2>@Resources.ResourcesTitles.StudentEnrollment</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset>
            <legend class="fieldset-legend">@Resources.ResourcesTitles.StudentData</legend>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.student_type_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.student_type_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.student_type_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.full_name, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.full_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.full_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.birth_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.birth_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.marital_status_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.marital_status_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.marital_status_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group required">
                        @Html.LabelFor(model => model.gender_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.gender_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.gender_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.place_of_birth, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.place_of_birth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.place_of_birth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.province_of_birth_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.province_of_birth_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.province_of_birth_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.fathers_name, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.fathers_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fathers_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.mothers_name, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mothers_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.mothers_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.address, new { htmlAttributes = new { @class = "form-control" }, cols = "50" })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.id_number, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.id_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group required">
                        @Html.LabelFor(model => model.id_issuance_province, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.id_issuance_province, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_issuance_province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.id_issuance_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.id_issuance_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_issuance_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.id_expiry_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.id_expiry_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_expiry_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.academic_level_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.academic_level_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.academic_level_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.job_title, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.job_title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.job_title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.cell_phone1, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.cell_phone1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cell_phone1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cell_phone2, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.cell_phone2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cell_phone2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
        <br />

        <fieldset>
            <legend class="fieldset-legend">@Resources.ResourcesTitles.CategoryAndPayment</legend>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.license_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.license_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.license_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.totalAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.totalAmount, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.payment_type_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.payment_type_id, null, @Resources.ResourcesFields.DropdownOptionLabel, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.payment_type_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.minimumAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.minimumAmount, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.amountToPay, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.amountToPay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.amountToPay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.payment_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.payment_id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.payment_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
        <br />

        <fieldset>
            <legend class="fieldset-legend">@Resources.ResourcesTitles.Documents</legend>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.picture, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.picture, new { @class = "form-control", type = "file" })
                            @Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDCopy, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.IDCopy, new { @class = "form-control", type = "file" })
                            @Html.ValidationMessageFor(model => model.IDCopy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.criminalRecordCertificate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.criminalRecordCertificate, new { @class = "form-control", type = "file" })
                            @Html.ValidationMessageFor(model => model.criminalRecordCertificate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.medicalCertificate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.medicalCertificate, new { @class = "form-control", type = "file" })
                            @Html.ValidationMessageFor(model => model.medicalCertificate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.militaryServiceStatement, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.militaryServiceStatement, new { @class = "form-control", type = "file" })
                            @Html.ValidationMessageFor(model => model.militaryServiceStatement, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="@Resources.ResourcesButtons.Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@Resources.ResourcesButtons.BackToList, "Index")
</div>
